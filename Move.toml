[package]
# I don't think package name matters much. I think it's used only when you
# decide to put it somewhere in `[dependencies]`.
name = 'escrow'
version = '1.0.0'

[addresses]
# Addresses are more important. When you refer to your module as useless:Useless
# then `useless` is not the package name but a named address!
# see this for more: https://move-language.github.io/move/address.html#named-addresses
escrow = "63b232cb7ce2b6c4c282f6911599bee304b902298ede4d75d3681782eb639b94"
TestCoins = "63b232cb7ce2b6c4c282f6911599bee304b902298ede4d75d3681782eb639b94"

[dependencies]
# So we can "load" dependencies with git. We can not only specify git repo, but also which subdir
# we want to use and which revision (git tag, branch name or a commit hash).

# You will also notice something weird - we use "AptosFramework" while when working this in code
# we will refer to modules as "aptos_framework::something". This is because AptosFramework is name
# of the package (in Move.toml), but if you take a look inside it - it exports several named addresses like
# "std", "aptos_std", "aptos_framework". And when working in code - we are actually referring to addresses!
AptosFramework = {git = 'https://github.com/aptos-labs/aptos-core.git', rev = 'devnet', subdir = 'aptos-move/framework/aptos-framework'}
